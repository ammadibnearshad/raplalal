{{ 'type-form-section.css' | asset_url | stylesheet_tag }}
<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script> -->
{%- style -%}
  #shopify-section-{{ section.id }} {
    --section-padding-top: {{ section.settings.padding_top }}px;
    --section-padding-bottom: {{ section.settings.padding_bottom }}px;
  }
  .end_form .button{
    font-size:13px;
    text-align: center;
    line-height: 30px;
    color: #fff;
  }
{%- endstyle -%}
{%- liquid
  assign product = section.settings.product
  assign first_image = product.media.first
  assign product_form_id = 'product-form-' | append: section.id

  if product.selected_or_first_available_variant.featured_media != null
    assign first_image = product.selected_or_first_available_variant.featured_media
  endif
-%}

<section class="type-form-section">
<style>
  {% if section.settings.use_loader %}
  .loader {
    display:block !Important;
    margin: 172px auto;
    border: 8px solid #f3f3f3;
    border-radius: 50%;
    border-top: 8px solid black;
    width: 80px;
    height: 80px;
    -webkit-animation: spin 2s linear infinite; /* Safari */
    animation: spin 2s linear infinite;
  }
  .loading-spinner {
    position: absolute;
    width: 100%;
    height: 100vh;
    align-items: center;
    display: flex;
    background: rgb(0 0 0 / 35%);
  }
  /* Safari */
  @-webkit-keyframes spin {
    0% { -webkit-transform: rotate(0deg); }
    100% { -webkit-transform: rotate(360deg); }
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
</style>
<div class="loading-spinner" style="display:none;"><div class="loader" ></div></div>
{% endif %}
  <div class="page-width section--padding">
    <div class="custom-form-container">
      <!-- Step 1 -->
      {% render 'first-form' %}

      <!-- Step 2 -->
      {% render 'second-form' %}

      <!-- Step 3 -->
      {% render 'third-form' %}

      <!-- Step 4 -->
      {% render 'forth-form' %}

      <!-- Step 5 -->
      {% render 'fifth-form' %}

      <!-- Step 6 -->
      {% render 'sixth-form' %}

      <!-- Step 7 -->
      {% render 'seventh-form' %}

      <!-- Step 8 -->
      {% render 'eighth-form' %}

      <!-- Step 9 -->
      {% render 'ninth-form' %}

      <!-- Step 10 -->
      {% render 'tenth-form' %}

      <!-- Step 11 -->
      {% render 'eleventh-form' %}

      <!-- Step 12 -->
      {% render 'twelfth-form' %}

      <!-- Step 13 -->
      {% render 'thirteenth-form' %}

      <!-- Step 14 -->
      {% render 'forteenth-form' %}

      <!-- Step 15 -->
      {% render 'fifteenth-form' %}

      <!-- Step 16 -->
      {% render 'sixteenth-form' %}

      <!-- Step 17 -->
      {% render 'seventeenth-form' %}

      <!-- Step 18 -->
      {% render 'eighteenth-form' %}

      <!-- Step 19 -->
      {% render 'nineteenth-form' %}

      <!-- Step 20 -->
      {% render 'twentieth-form' %}

      <!-- Step 21 -->
      {% render 'twentieth-first-form' %}

      <!-- Step 22 -->
      {% render 'twentieth-second-form' %}

      <!-- Step 23 -->
      {% render 'twentieth-third-form' %}

      <!-- Step 24 -->
      {% render 'twentieth-forth-form' %}

      <!-- Step 25 -->
      {% render 'twentieth-fifth-form' %}

      <!-- Step 26 -->
      {% render 'twentieth-sixth-form' %}

      <!-- Step 27 -->
      {% render 'mechanism-end' %}

      <!-- Step 28 -->
      {% render 'replica-end' %}

      <!-- Step 29 -->
      {% render 'real-fur-end' %}

      <!-- Step 30 -->
      {% render 'procelain-end' %}

      <!-- Step 31 -->
      {% render 'plastic-end' %}
    </div>
  </div>
  
  <div id="add-to-cart-form" style="display: none;" class="hospital-add-to-cart-form">
    {%- form 'product', product, id: product_form_id, data-type: 'add-to-cart-form' -%}
      <!-- <div class="pd-form__input line-item-property__field" style="display :none;">
        <label class="form__label">File Upload</label>
        <input type="file" form="{{ product_form_id }}" name="properties[File Upload]">
      </div> -->
      {% for block in section.blocks %}
        
        {% if block.type == 'line_item_property' %}
          <div
            data-id="{{ block.settings.line_item_property_unique_id }}"
            class="product-form__input line-item-container line-item-property__field"
            {{ block.shopify_attributes }}
            style="display: none;"
          >
            {%- if block.settings.type == 'checkbox' -%}
              <label for="line-item-{{ section.id }}-{{ block.id }}" class="form__facet-checkbox">
                <input
                  type="hidden"
                  name="properties[{{ block.settings.title | escape }}]"
                  value="{{ block.settings.unchecked_value | escape }}"
                  form="{{ product_form_id }}"
                >
                <input
                  id="line-item-{{ section.id }}-{{ block.id }}"
                  type="checkbox"
                  name="properties[{{ block.settings.title | escape }}]"
                  value="{{ block.settings.checked_value | escape }}"
                  {% if block.settings.required %}
                    required
                  {% endif %}
                  form="{{ product_form_id }}"
                >
                {% render 'icon', icon: 'checkmark' %}
                {{ block.settings.label | escape }}
              </label>
            {%- else -%}
              <label class="form__label" for="line-item-{{ section.id }}-{{ block.id }}">
                {{- block.settings.title | escape -}}
              </label>
              {%- case block.settings.type -%}
                {%- when 'file' -%}
                  <input
                    class="field form-group__input"
                    id="{{ block.settings.line_item_property_unique_id }}"
                    type="file"
                    name="properties[{{ block.settings.title | escape }}]"
                    {% if block.settings.required %}
                      required
                    {% endif %}
                    form="{{ product_form_id }}"
                  >
                {%- when 'text' -%}
                  <input
                    class="field form-group__input"
                    id="{{ block.settings.line_item_property_unique_id }}"
                    type="text"
                    name="properties[{{ block.settings.title | escape }}]"
                    value=""
                    {% if block.settings.required %}
                      required
                    {% endif %}
                    form="{{ product_form_id }}"
                  >
                {%- when 'textarea' -%}
                  <textarea
                    class="text-area field form-group__input"
                    id="{{ block.settings.line_item_property_unique_id }}"
                    name="properties[{{ block.settings.title | escape }}]"
                    value=""
                    {% if block.settings.required %}
                      required
                    {% endif %}
                    form="{{ product_form_id }}"
                  ></textarea>
                {%- when 'radio' -%}
                  {%- assign options = block.settings.radio_options | split: ',' -%}
                  {%- if options.size > 1 -%}
                    <fieldset class="product-form__input">
                      {%- for option in options -%}
                        <label
                          class="form__facet-radio"
                          for="line-item-{{ section.id }}-{{ block.id }}-{{ forloop.index0 }}"
                        >
                          <input
                            id="line-item-{{ section.id }}-{{ block.id }}-{{ forloop.index0 }}"
                            type="radio"
                            name="properties[{{ block.settings.label | escape }}]"
                            value="{{ option | strip | escape }}"
                            {% if block.settings.required %}
                              required
                            {% endif %}
                            form="{{ product_form_id }}"
                          >
                          <span class="icon"></span>
                          {{ option | strip | escape }}
                        </label>
                      {%- endfor -%}
                    </fieldset>
                  {%- endif -%}
                {%- when 'select' -%}
                  {%- assign options = block.settings.select_options | split: ',' -%}
                  {%- if options.size > 1 -%}
                    <select-wrapper class="select">
                      <select
                        class="select__select"
                        id="line-item-{{ section.id }}-{{ block.id }}"
                        name="properties[{{ block.settings.title | escape }}]"
                        {% if block.settings.required %}
                          required
                        {% endif %}
                        form="{{ product_form_id }}"
                      >
                        {%- for option in options -%}
                          <option value="{{ option | strip | escape }}">
                            {{ option | strip | escape }}
                          </option>
                        {%- endfor -%}
                      </select>
                      {% render 'icon', icon: 'caret' %}
                    </select-wrapper>
                  {%- endif -%}
              {%- endcase -%}
            {%- endif -%}
          </div>
        {% endif %}
      {% endfor %}
      <div class="submission-data custom-form-container">
        <div class="customer addresses form-container page-width section--padding" data-customer-addresses>
          <div id="AddAddress">
            <h2 id="AddressNewHeading">{{ section.settings.shipping_details_title }}</h2>
            <div class="field form-group">
              <input
                type="text"
                id="AddressFirstNameNew"
                class="form-control"
                name="address[first_name]"
                value="{{ form.first_name }}"
                autocomplete="given-name"
                placeholder="{{ 'customer.addresses.first_name' | t }}"
                required
              >
              <label class="visually-hidden" for="AddressFirstNameNew">{{ 'customer.addresses.first_name' | t }}</label>
            </div>
            <div class="field form-group">
              <input
                type="text"
                id="AddressLastNameNew"
                class="form-control"
                name="address[last_name]"
                value="{{ form.last_name }}"
                autocomplete="family-name"
                placeholder="{{ 'customer.addresses.last_name' | t }}"
                required
              >
              <label class="visually-hidden" for="AddressLastNameNew">{{ 'customer.addresses.last_name' | t }}</label>
            </div>
            <div class="field form-group">
              <input
                type="email"
                id="AddressEmailNew"
                class="form-control"
                name="address[email]"
                value="{{ form.email }}"
                autocomplete="email"
                placeholder="Email"
                required
              >
              <label class="visually-hidden" for="AddressEmailNew">Email</label>
            </div>
            <div class="field form-group">
              <input
                type="text"
                id="AddressCompanyNew"
                class="form-control"
                name="address[company]"
                value="{{ form.company }}"
                autocomplete="organization"
                placeholder="{{ 'customer.addresses.company' | t }}"
              >
              <label class="visually-hidden" for="AddressCompanyNew">{{ 'customer.addresses.company' | t }}</label>
            </div>
            <div class="field form-group">
              <input
                type="text"
                id="AddressAddress1New"
                class="form-control"
                name="address[address1]"
                value="{{ form.address1 }}"
                autocomplete="address-line1"
                placeholder="{{ 'customer.addresses.address1' | t }}"
                required
              >
              <label class="visually-hidden" for="AddressAddress1New">{{ 'customer.addresses.address1' | t }}</label>
            </div>
            <div class="field form-group">
              <input
                type="text"
                id="AddressAddress2New"
                class="form-control"
                name="address[address2]"
                value="{{ form.address2 }}"
                autocomplete="address-line2"
                placeholder="{{ 'customer.addresses.address2' | t }}"
              >
              <label class="visually-hidden" for="AddressAddress2New">{{ 'customer.addresses.address2' | t }}</label>
            </div>
            <div class="field form-group">
              <input
                type="text"
                id="AddressCityNew"
                class="form-control"
                name="address[city]"
                value="{{ form.city }}"
                autocomplete="address-level2"
                placeholder="{{ 'customer.addresses.city' | t }}"
              >
              <label class="visually-hidden" for="AddressCityNew">{{ 'customer.addresses.city' | t }}</label>
            </div>
            <div class="field form-group">
              <div class="select">
                <select
                  id="AddressCountryNew"
                  class="form-control"
                  name="address[country]"
                  data-default="{{ form.country }}"
                  autocomplete="country"
                  required
                >
                  {{ all_country_option_tags }}
                </select>
                {% render 'icon', icon: 'caret' %}
              </div>
              <label class="visually-hidden" for="AddressCountryNew">{{ 'customer.addresses.country' | t }}</label>
            </div>
            <div class="field form-group" id="AddressProvinceContainerNew" style="display: none">
              <div class="select">
                <select
                  id="AddressProvinceNew"
                  class="form-control"
                  name="address[province]"
                  data-default="{{ form.province }}"
                  autocomplete="address-level1"
                ></select>
                {% render 'icon', icon: 'caret' %}
              </div>
              <label class="visually-hidden" for="AddressProvinceNew">{{ 'customer.addresses.province' | t }}</label>
            </div>
            <div class="field form-group">
              <input
                type="text"
                id="AddressZipNew"
                class="form-control"
                name="address[zip]"
                value="{{ form.zip }}"
                autocapitalize="characters"
                autocomplete="postal-code"
                placeholder="{{ 'customer.addresses.zip' | t }}"
                required
              >
              <label class="visually-hidden" for="AddressZipNew">{{ 'customer.addresses.zip' | t }}</label>
            </div>
            <div class="field form-group">
              <input
                type="tel"
                id="AddressPhoneNew"
                class="form-control"
                name="address[phone]"
                value="{{ form.phone }}"
                autocomplete="tel"
                placeholder="{{ 'customer.addresses.phone' | t }}"
              >
              <label class="visually-hidden" for="AddressPhoneNew">{{ 'customer.addresses.phone' | t }}</label>
            </div>
          </div>
        </div>
      </div>
      <div id="productList" class="product-list">
        <h3>{{ section.settings.estimated_price_text }}</h3>
        <div class="default-product-admission">
          {{ section.settings.product.title }} -<strong> {{ section.settings.product.price | money }}</strong>
        </div>
        <ul id="product-lists" class="product-lists"></ul>
        <div class='label--for--images' style="display:none; font-weight:bold;">Toy Photos</div>
        <div id="image-preview-container">
          <!-- The image preview and label will be inserted here -->
          
        </div>
        <div id="totalPrice" class="total-price">{{ section.settings.estimated_total_price_text }} <span id="sumPrice">$0.00</span></div>
      </div>
      <div id="selectedProduct" class="selectedProduct"></div>
      <input id="defaultProduct" type="hidden" name="id" data-product-price="{{ product.price | money }}" value="{{ product.selected_or_first_available_variant.id }}">
      <button
        type="submit"
        name="add"
        id="submitButton"
        class="hospital-add-to-cart product-form__submit button{% if block.settings.show_dynamic_checkout %} button--secondary{% endif %} button--full-width"
        disabled
        {%- if product.template_suffix == 'pre-order' %}
          data-pre-order="true"
        {% endif -%}
      >
        {%- liquid
          if product.selected_or_first_available_variant.available
            if product.template_suffix != 'pre-order'
              echo 'products.product.submit_estimate' | t
            else
              echo 'products.product.pre_order' | t
            endif
          else
            echo 'products.product.sold_out' | t
          endif
        -%}
      </button>
    {% endform %}
  </div>
</section>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const submitButton = document.getElementById('submitButton');
    const mandatoryFields = document.querySelectorAll('.submission-data input[required]');

    function checkFields() {
      let allFieldsValid = true;
      mandatoryFields.forEach(function(field) {
        if (field.value.trim() === '') {
          allFieldsValid = false;
        }
      });

      if (allFieldsValid) {
        submitButton.removeAttribute('disabled');
      } else {
        submitButton.setAttribute('disabled', 'disabled');
      }
    }

    mandatoryFields.forEach(function(field) {
      field.addEventListener('input', checkFields);
    });

    // Initial check
    checkFields();
  });
</script>

<script>
  function addToCart(selectedProducts, defaultProductId) {
    // alert('s');
    const variants= [];
    $('#selectedProduct input').each(function(){
       variants.push($(this).val());
    });
    var lineItems = variants.map(function(variantID) {
      return {
        id: variantID,
        quantity: 1
      };
    });
    // const items = selectedProducts
    //   .filter(product => product.value !== '') // Filter out empty values
    //   .map(product => ({
    //     id: product.value, // Assuming product.value contains the variant ID
    //     quantity: 1 // Adjust quantity as needed
    //   }));
    // alert(lineItems);
    // console.log(selectedProducts); // Log items array

    // Make AJAX request to add multiple selected products to the cart using jQuery
    $.ajax({
      type: 'POST',
      url: '/cart/add.js',
      dataType: 'json',
      asyns:false,
      cache:false,
      data: {
        items: lineItems
      },
      success: function(response) {
        // alert('ss');
        // console.log(response);
        $(document).trigger('cartdrawer:refresh');
        // window.location.href = '/cart'; 
        // After adding selected products, add default product with line items
         addDefaultProductToCart(defaultProductId, selectedProducts);
      },
      error: function(XMLHttpRequest, textStatus, errorThrown) {
        console.error(textStatus, errorThrown);
        // Handle error here
      }
    });

    // Function to add default product with line items
    function addDefaultProductToCart(defaultProductId, lineItemsData) {
      // Prepare line item properties for the default product, filtering out empty values
      const properties = lineItemsData
        .filter(item => item.value !== '')
        .map(item => `${item.label}: ${item.value}`);

      // console.log('Line item properties for default product:', properties); // Log line item properties

      const outputObject = {};

      properties.forEach(item => {
        const [key, value] = item.split(': ');
        outputObject[key] = value;
      });

      localStorage.setItem("form_data",  JSON.stringify(outputObject));
      // Make AJAX request to add default product to cart with line items
      $.ajax({
        type: 'POST',
        url: '/cart/add.js',
        dataType: 'json',
        asyns:false,
        cache:false,
        data: {
          items: [
            {
              id: defaultProductId,
              quantity: 1,
              properties: outputObject
            }
          ]
        },
        success: function(response) {
          var formData = {
              address1: $('#AddressAddress1New').val(),
              address2: $('#AddressAddress2New').val(),
              city: $('#AddressCityNew').val(),
              zip: $('#AddressZipNew').val(),
              country: $('#AddressCountryNew').val(),
              phone: $('#AddressPhoneNew').val()
          };
          var email=$('#AddressEmailNew').val();
          var name=$('#AddressFirstNameNew').val()+' '+$('#AddressLastNameNew').val();
          localStorage.setItem("email", email);
          localStorage.setItem("name", name);
          var addressData = JSON.stringify(formData);
          jQuery.getJSON('/cart.js', function(cart) {
          // now have access to Shopify cart object
          // console.log('cart');
          // console.log(outputObject);
          var resultArray = Object.entries(outputObject).map(([name, value]) => ({ name, value }));
      
          // console.log(resultArray);
          var formattedLineItems = cart.items.map(function (item) {
            // Ensure properties is an array of objects with name and value
            var properties = Array.isArray(item.properties)
                ? item.properties
                : [{ name: 'default_property_name', value: 'default_property_value' }];

            return {
                variant_id: item.variant_id,
                quantity: item.quantity,
                properties: resultArray
            };
          });
          // Select the hidden input field
          const localeCodeInput = document.querySelector('input[name="locale_code"]');
          
          // Get the value of the input field
          const localeCodeValue = localeCodeInput.value;
          // Log the value to the console (optional)
          // console.log(localeCodeValue);
            // Log the formatted line items
            // console.log(formattedLineItems);
            var jsonString = JSON.stringify(formattedLineItems);

            // Log the JSON string
            // console.log(jsonString);
            $.ajax({
                type: 'POST',
                url: 'https://www.argentpatate.com/api/index.php', // Replace with your PHP script URL
                data: {
                  line_items: jsonString,
                  email:email,
                  address:addressData
                },
                success: function (response) {
                      console.log('PHP Script Response:', response);
                  
                      if (response && response.draft_order && response.draft_order.name && response.draft_order.invoice_url) {
                          localStorage.setItem("draft#", response.draft_order.name);
                          localStorage.setItem("draft_url", response.draft_order.invoice_url);
                  
                          $.ajax({
                              type: 'POST',
                              url: '/cart/clear.js',
                              dataType: 'json',
                              success: function(response) {
                                  $(".loading-spinner").hide();
                                  if (localeCodeValue == 'en') {
                                      window.location.href = "/en/pages/success";
                                  } else {
                                      window.location.href = "/pages/success";
                                  }
                              },
                              error: function (error) {
                                  console.error('Error clearing cart:', error);
                                  resetAll();
                              }
                          });
                  
                      } else {
                          console.error('Invalid response format or missing draft_order:', response);
                          alert("Something went wrong with order creation. Please try again.");
                      }
                  },

                error: function (error) {
                    console.error('Error:', error);
                }
            });
          });
          
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
          console.error(textStatus, errorThrown);
          // Handle error here
        }
      });
    }
  }
    const selectedProducts = [];
  // Capture form submission to add multiple products to the cart
  $('.hospital-add-to-cart').on('click', function(event) {
    event.preventDefault();
    // alert('s');
    $('html, body').animate({scrollTop: 0}, 'slow');
    $('html, body').css('overflow','hidden');
    setTimeout(function() {
     $(".loading-spinner").css('display','flex');
    }, 1000);
    
    
    const defaultProductId = $('#defaultProduct').val(); // Get default product ID

    // Retrieve and process selectedProducts here
    $('.hospital-add-to-cart-form .line-item-container').each(function() {
      // Process line items data and add to selectedProducts array if value is not empty
      const label = $(this).find('label').text();
      const value = $(this).find('input').val();

      // Add non-empty line item data to selectedProducts array
      if (value !== '') {
        selectedProducts.push({ label: label, value: value });
      }
    });

    // console.log('Selected products array:', selectedProducts); // Log selected products array

    addToCart(selectedProducts, defaultProductId);
  });
</script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
      const options = document.querySelectorAll('.option[data-next]');
  
      options.forEach(option => {
          option.addEventListener('click', function(event) {
            // alert('s');
              const onclickAttribute = option.getAttribute('onclick');
              // const dataNext = option.getAttribute('data-next');
              if (onclickAttribute) {
                // alert('s');
                  // Extract the ID from the onclick attribute
                  const regex = /'([^']+)'/;
                  const match = regex.exec(onclickAttribute);
                  if (match && match[1]) {
                      const nextStepId = match[1];
                      const nextStepElement = document.getElementById(nextStepId);
                      // alert('ss');
                      if (nextStepElement) {
                        // Calculate the target position including the offset
                        const offset = 150; // Adjust the offset as needed
                        const elementPosition = nextStepElement.getBoundingClientRect().top + window.scrollY;
                        const offsetPosition = elementPosition - offset;

                        // Scroll to the calculated position
                        window.scrollTo({
                            top: offsetPosition,
                            behavior: 'smooth'
                        });
                      }
                  }
              }
          });
      });


      const buttons = document.querySelectorAll('.button');
  
      buttons.forEach(option => {
          option.addEventListener('click', function(event) {
              const onclickAttribute = option.getAttribute('onclick');
              const nextAttribute = option.getAttribute('data-next');
              if (onclickAttribute) {
                  // Extract the ID from the onclick attribute
                  const regex = /'([^']+)'/;
                  const match = regex.exec(onclickAttribute);
                  if (match && match[1]) {
                      const nextStepId = match[1];
                      const nextStepElement = document.getElementById(nextStepId);
  
                      if (nextStepElement) {
                        // Calculate the target position including the offset
                        const offset = 150; // Adjust the offset as needed
                        const elementPosition = nextStepElement.getBoundingClientRect().top + window.scrollY;
                        const offsetPosition = elementPosition - offset;

                        // Scroll to the calculated position
                        window.scrollTo({
                            top: offsetPosition,
                            behavior: 'smooth'
                        });
                      }
                  }
              }
              if (nextAttribute) {
                    // Extract the ID from the onclick attribute
                    // const regex = /'([^']+)'/;
                    const match = nextAttribute;
                    if (match ) {
                        const nextStepId = match;
                        const nextStepElement = document.getElementById(nextStepId);
    
                        if (nextStepElement) {
                          // Calculate the target position including the offset
                          const offset = 150; // Adjust the offset as needed
                          const elementPosition = nextStepElement.getBoundingClientRect().top + window.scrollY;
                          const offsetPosition = elementPosition - offset;
  
                          // Scroll to the calculated position
                          window.scrollTo({
                              top: offsetPosition,
                              behavior: 'smooth'
                          });
                        }
                    }
                }
          });
      });
  });
</script>
{% schema %}
{
  "name": "Type Form",
  "settings": [
    {
      "type": "product",
      "id": "product",
      "label": "Product"
    },{
      "type":"checkbox",
      "id":"use_loader",
      "label":"Use Loader",
      "default":true,
      "info":"Note: This is the loader which is shown on clicking Add to Cart Button/ Submit Estimate Button"
    },{
      "type":"header",
      "content":"Next/ Prev Buttons"
    },{
      "type":"text",
      "id":"next_btn_text",
      "label":"Next Button Text",
      "default":"Suivante"
    },{
      "type":"text",
      "id":"back_btn_text",
      "label":"Back Button Text",
      "default":"dos"
    },{
      "type":"text",
      "id":"submit_btn_text",
      "label":"Submit Button Text",
      "default":"soumettre"
    },
    {
      "type": "header",
      "content": "Forms Content"
    },
    {
      "type": "header",
      "content": "First Form Content"
    },
    {
      "type": "text",
      "id": "form_1_unique_id",
      "label": "First Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_1_question",
      "label": "First Form Question"
    },
    {
      "type": "text",
      "id": "form_1_question_description",
      "label": "First Form Question Description"
    },
    {
      "type": "image_picker",
      "id": "form_1_image",
      "label": "First Form Image"
    },
    {
      "type": "text",
      "id": "form_1_option_1",
      "label": "First Form Option 1"
    },
    {
      "type": "text",
      "id": "form_1_option_2",
      "label": "First Form Option 2"
    },
    {
      "type": "text",
      "id": "form_1_option_3",
      "label": "First Form Option 3"
    },
    {
      "type": "text",
      "id": "form_1_option_4",
      "label": "First Form Option 4"
    },
    {
      "type": "text",
      "id": "form_1_option_5",
      "label": "First Form Option 5"
    },
    {
      "type": "header",
      "content": "Second Form Content"
    },
    {
      "type": "text",
      "id": "form_2_unique_id",
      "label": "Second Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_2_question",
      "label": "Second Form Question"
    },
    {
      "type": "text",
      "id": "form_2_question_description",
      "label": "Second Form Question Description"
    },
    {
      "type": "image_picker",
      "id": "form_2_image",
      "label": "Second Form Image"
    },
    {
      "type": "text",
      "id": "form_2_option_1",
      "label": "Second Form Option 1"
    },
    {
      "type": "text",
      "id": "form_2_option_2",
      "label": "Second Form Option 2"
    },
    {
      "type": "text",
      "id": "form_2_option_3",
      "label": "Second Form Option 3"
    },
    {
      "type": "text",
      "id": "form_2_option_4",
      "label": "Second Form Option 4"
    },
    {
      "type": "text",
      "id": "form_2_option_5",
      "label": "Second Form Option 5"
    },
    {
      "type": "header",
      "content": "Third Form Content"
    },
    {
      "type": "text",
      "id": "form_3_unique_id",
      "label": "Third Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_3_question",
      "label": "Third Form Question"
    },
    {
      "type": "image_picker",
      "id": "form_3_image",
      "label": "Third Form Image"
    },
    {
      "type": "text",
      "id": "form_3_option_1",
      "label": "Third Form Option 1"
    },
    {
      "type": "text",
      "id": "form_3_option_2",
      "label": "Third Form Option 2"
    },
    {
      "type": "text",
      "id": "form_4_unique_id",
      "label": "Forth Form Unique ID"
    },
    {
      "type": "header",
      "content": "Forth Form Content"
    },
    {
      "type": "text",
      "id": "form_4_question",
      "label": "Forth Form Question"
    },
    {
      "type": "image_picker",
      "id": "form_4_image",
      "label": "Forth Form Image"
    },
    {
      "type": "text",
      "id": "form_4_option_1",
      "label": "Forth Form Option 1"
    },
    {
      "type": "text",
      "id": "form_4_option_2",
      "label": "Forth Form Option 2"
    },
    {
      "type": "header",
      "content": "Fifth Form Content"
    },
    {
      "type": "text",
      "id": "form_5_unique_id",
      "label": "Fifth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_5_question",
      "label": "Fifth Form Question"
    },
    {
      "type": "text",
      "id": "form_5_question_description",
      "label": "Fifth Form Question Description"
    },
    {
      "type": "image_picker",
      "id": "form_5_image",
      "label": "Fifth Form Image"
    },
    {
      "type": "text",
      "id": "form_5_option_1",
      "label": "Fifth Form Option 1"
    },
    {
      "type": "text",
      "id": "form_5_option_2",
      "label": "Fifth Form Option 2"
    },
    {
      "type": "text",
      "id": "form_5_option_3",
      "label": "Fifth Form Option 3"
    },
    {
      "type": "text",
      "id": "form_5_option_4",
      "label": "Fifth Form Option 4"
    },
    {
      "type": "text",
      "id": "form_5_option_5",
      "label": "Fifth Form Option 5"
    },
    {
      "type": "header",
      "content": "Sisxth Form Content"
    },
    {
      "type": "text",
      "id": "form_6_unique_id",
      "label": "Sixth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_6_question",
      "label": "Sisxth Form Question"
    },
    {
      "type": "text",
      "id": "form_6_question_description",
      "label": "Sisxth Form Question Description"
    },
    {
      "type": "image_picker",
      "id": "form_6_image",
      "label": "Sisxth Form Image"
    },
    {
      "type": "text",
      "id": "form_6_option_1",
      "label": "Sisxth Form Option 1"
    },
    {
      "type": "text",
      "id": "form_6_option_2",
      "label": "Sisxth Form Option 2"
    },
    {
      "type": "header",
      "content": "Seventh Form Content"
    },
    {
      "type": "text",
      "id": "form_7_unique_id",
      "label": "Seventh Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_7_question",
      "label": "Seventh Form Question"
    },
    {
      "type": "text",
      "id": "form_7_question_description",
      "label": "Seventh Form Question Description"
    },
    {
      "type": "image_picker",
      "id": "form_7_image",
      "label": "Seventh Form Image"
    },
    {
      "type": "text",
      "id": "form_7_option_1",
      "label": "Seventh Form Option 1"
    },
    {
      "type": "text",
      "id": "form_7_option_2",
      "label": "Seventh Form Option 2"
    },
    {
      "type": "text",
      "id": "form_7_option_3",
      "label": "Seventh Form Option 3"
    },
    {
      "type": "text",
      "id": "form_7_option_4",
      "label": "Seventh Form Option 4"
    },
    {
      "type": "header",
      "content": "Eighth Form Content"
    },
    {
      "type": "text",
      "id": "form_8_unique_id",
      "label": "Eighth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_8_question",
      "label": "Eighth Form Question"
    },
    {
      "type": "text",
      "id": "form_8_question_description",
      "label": "Eighth Form Question Description"
    },
    {
      "type": "image_picker",
      "id": "form_8_image",
      "label": "Eighth Form Image"
    },
    {
      "type": "product",
      "id": "form_8_product",
      "label": "Eighth Form Product"
    },
    {
      "type": "text",
      "id": "form_8_option_1",
      "label": "Eighth Form Option 1"
    },
    {
      "type": "text",
      "id": "form_8_option_2",
      "label": "Eighth Form Option 2"
    },
    {
      "type": "header",
      "content": "Ninth Form Content"
    },
    {
      "type": "text",
      "id": "form_9_unique_id",
      "label": "Ninth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_9_question",
      "label": "Ninth Form Question"
    },
    {
      "type": "text",
      "id": "form_9_question_description",
      "label": "Ninth Form Question Description"
    },
    {
      "type": "product",
      "id": "form_9_option_1234_product_raplala",
      "label": "Ninth Form Option 1 2 3 4 Product Raplala"
    },
    {
      "type": "product",
      "id": "form_9_option_1234_product_over_forty",
      "label": "Ninth Form Option 1 2 3 4 Product (Over Forty)"
    },
    {
      "type": "product",
      "id": "form_9_option_1234_product_under_forty",
      "label": "Ninth Form Option 1 2 3 4 Product (Under Forty)"
    },
    {
      "type": "product",
      "id": "form_9_option_5_product",
      "label": "Ninth Form Option 5 Product (Raplapla)"
    },
    {
      "type": "product",
      "id": "form_9_option_5_product_brand",
      "label": "Ninth Form Option 5 Product (Brand)"
    },
    {
      "type": "product",
      "id": "form_9_option_6_7_8_product_raplala",
      "label": "Ninth Form Option 6,7,8 Product Raplapla"
    },
    {
      "type": "product",
      "id": "form_9_option_6_7_8_product_under_40",
      "label": "Ninth Form Option 6,7,8 Product (Under 40)"
    },
    {
      "type": "product",
      "id": "form_9_option_6_7_8_product_over_40",
      "label": "Ninth Form Option 6,7,8 Product (Over 40)"
    },
    {
      "type": "product",
      "id": "form_9_option_9_10_11_12_product_raplapla",
      "label": "Ninth Form Option 9 10 11 12 Product (Raplapla)"
    },
    {
      "type": "product",
      "id": "form_9_option_9_10_11_12_product_under_40",
      "label": "Ninth Form Option 9 10 11 12 Product (Under 40)"
    },
    {
      "type": "product",
      "id": "form_9_option_9_10_11_12_product_over_40",
      "label": "Ninth Form Option 9 10 11 12 Product (Over 40)"
    },
    {
      "type": "product",
      "id": "form_9_option_13_14_15_16_product_raplapla",
      "label": "Ninth Form Option 13 14 15 16 Product (Raplapla)"
    },
    {
      "type": "product",
      "id": "form_9_option_13_14_15_16_product_under_40",
      "label": "Ninth Form Option 13 14 15 16 Product {Under 40}"
    },
    {
      "type": "product",
      "id": "form_9_option_13_14_15_16_product_over_40",
      "label": "Ninth Form Option 13 14 15 16 Product {Over 40}"
    },
    {
      "type": "text",
      "id": "form_9_option_1",
      "label": "Ninth Form Option 1"
    },
    {
      "type": "text",
      "id": "form_9_option_2",
      "label": "Ninth Form Option 2"
    },
    {
      "type": "text",
      "id": "form_9_option_3",
      "label": "Ninth Form Option 3"
    },
    {
      "type": "text",
      "id": "form_9_option_4",
      "label": "Ninth Form Option 4"
    },
    {
      "type": "text",
      "id": "form_9_option_5",
      "label": "Ninth Form Option 5"
    },
    {
      "type": "text",
      "id": "form_9_option_6",
      "label": "Ninth Form Option 6"
    },
    {
      "type": "text",
      "id": "form_9_option_7",
      "label": "Ninth Form Option 7"
    },
    {
      "type": "text",
      "id": "form_9_option_8",
      "label": "Ninth Form Option 8"
    },
    {
      "type": "text",
      "id": "form_9_option_9",
      "label": "Ninth Form Option 9"
    },
    {
      "type": "text",
      "id": "form_9_option_10",
      "label": "Ninth Form Option 10"
    },
    {
      "type": "text",
      "id": "form_9_option_11",
      "label": "Ninth Form Option 11"
    },
    {
      "type": "text",
      "id": "form_9_option_12",
      "label": "Ninth Form Option 12"
    },
    {
      "type": "text",
      "id": "form_9_option_13",
      "label": "Ninth Form Option 13"
    },
    {
      "type": "text",
      "id": "form_9_option_14",
      "label": "Ninth Form Option 14"
    },
    {
      "type": "text",
      "id": "form_9_option_15",
      "label": "Ninth Form Option 15"
    },
    {
      "type": "text",
      "id": "form_9_option_16",
      "label": "Ninth Form Option 16"
    },
    {
      "type": "header",
      "content": "Tenth Form Content"
    },
    {
      "type": "text",
      "id": "form_10_unique_id",
      "label": "Tenth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_10_question",
      "label": "Tenth Form Question"
    },
    {
      "type": "richtext",
      "id": "form_10_question_description",
      "label": "Tenth Form Question Description"
    },
    {
      "type": "text",
      "id": "form_10_file_size",
      "label": "Tenth Form File Size"
    },
    {
      "type": "url",
      "id": "form_10_file_url",
      "label": "Tenth Form File Url"
    },
    {
      "type": "header",
      "content": "Eleventh Form Content"
    },
    {
      "type": "text",
      "id": "form_11_unique_id",
      "label": "Eleventh Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_11_question",
      "label": "Eleventh Form Question"
    },{
      "type":"header",
      "content":"Form Eleven Options"
    },{
      "type":"text",
      "id":"form_11_option_1",
      "label":"Form 11 Option 1",
      "default":"Prénom"
    },{
      "type":"text",
      "id":"form_11_option_2",
      "label":"Form 11 Option 2",
      "default":"Nom"
    },{
      "type":"text",
      "id":"form_11_option_3",
      "label":"Form 11 Option 3",
      "default":"Numéro de téléphone"
    },{
      "type":"text",
      "id":"form_11_option_4",
      "label":"Form 11 Option 4",
      "default":"E-mail"
    },
    {
      "type": "text",
      "id": "form_11_question_description",
      "label": "Eleventh Form Question Description"
    },{
      "type":"header",
      "content":"Form Eleven Id's"
    },
    {
      "type": "text",
      "id": "form_11_first_name_unique_id",
      "label": "Eleventh Form First Name Unique ID"
    },
    {
      "type": "text",
      "id": "form_11_name_unique_id",
      "label": "Eleventh Form Name Unique ID"
    },
    {
      "type": "text",
      "id": "form_11_phone_unique_id",
      "label": "Eleventh Form Phone Unique ID"
    },
    {
      "type": "text",
      "id": "form_11_e_mail_unique_id",
      "label": "Eleventh Form Email Unique ID",
      "default":"email"
    },
    {
      "type": "header",
      "content": "Twelfth Form Content"
    },
    {
      "type": "text",
      "id": "form_12_unique_id",
      "label": "Twelfth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_12_question",
      "label": "Twelfth Form Question"
    },
    {
      "type": "richtext",
      "id": "form_12_question_description",
      "label": "Twelfth Form Question Description"
    },
    {
      "type": "textarea",
      "id": "form_12_calender",
      "label": "Twelfth Form Calender"
    },
    {
      "type": "header",
      "content": "Thirteenth Form Content"
    },
    {
      "type": "text",
      "id": "form_13_unique_id",
      "label": "Thirteenth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_13_question",
      "label": "Thirteenth Form Question"
    },
    {
      "type": "richtext",
      "id": "form_13_question_description",
      "label": "Thirteenth Form Question Description"
    },
    {
      "type": "textarea",
      "id": "form_13_calender",
      "label": "Thirteenth Form Calender"
    },
    {
      "type": "header",
      "content": "Forteenth Form Content"
    },
    {
      "type": "text",
      "id": "form_14_unique_id",
      "label": "Forteenth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_14_question",
      "label": "Forteenth Form Question"
    },
    {
      "type": "richtext",
      "id": "form_14_question_description",
      "label": "Forteenth Form Question Description"
    },
    {
      "type": "textarea",
      "id": "form_14_calender",
      "label": "Forteenth Form Calender"
    },
    {
      "type": "header",
      "content": "Fifteenth Form Content"
    },
    {
      "type": "text",
      "id": "form_15_unique_id",
      "label": "Fisteenth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_15_question",
      "label": "Fifteenth Form Question"
    },
    {
      "type": "richtext",
      "id": "form_15_question_description",
      "label": "Fifteenth Form Question Description"
    },
    {
      "type": "textarea",
      "id": "form_15_calender",
      "label": "Fifteenth Form Calender"
    },
    {
      "type": "header",
      "content": "Sixteenth Form Content"
    },
    {
      "type": "text",
      "id": "form_16_unique_id",
      "label": "Sixteenth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_16_question",
      "label": "Sixteenth Form Question"
    },
    {
      "type": "text",
      "id": "form_16_patient_name_unique_id",
      "label": "Sixteenth Form Patient Name Unique ID"
    },
    {
      "type": "header",
      "content": "Seventeenth Form Content"
    },
    {
      "type": "text",
      "id": "form_17_unique_id",
      "label": "Seventeenth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_17_question",
      "label": "Seventeenth Form Question"
    },
    {
      "type": "text",
      "id": "form_17_question_description",
      "label": "Seventeenth Form Question Description"
    },
    {
      "type": "image_picker",
      "id": "form_17_image",
      "label": "Seventeenth Form Image"
    },
    {
      "type": "text",
      "id": "form_17_option_1",
      "label": "Seventeenth Form Option 1"
    },
    {
      "type": "text",
      "id": "form_17_option_2",
      "label": "Seventeenth Form Option 2"
    },
    {
      "type": "text",
      "id": "form_17_option_3",
      "label": "Seventeenth Form Option 3"
    },
    {
      "type": "text",
      "id": "form_17_option_4",
      "label": "Seventeenth Form Option 4"
    },
    {
      "type": "text",
      "id": "form_17_option_5",
      "label": "Seventeenth Form Option 5"
    },
    {
      "type": "text",
      "id": "form_17_option_6",
      "label": "Seventeenth Form Option 6"
    },
    {
      "type": "header",
      "content": "Eighteenth Form Content"
    },
    {
      "type": "text",
      "id": "form_18_unique_id",
      "label": "Eighteenth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_18_question",
      "label": "Eighteenth Form Question"
    },
    {
      "type": "text",
      "id": "form_18_owner_name_unique_id",
      "label": "Eighteenth Form Owner Name Unique ID"
    },
    {
      "type": "header",
      "content": "Nineteenth Form Content"
    },
    {
      "type": "text",
      "id": "form_19_unique_id",
      "label": "Nineteenth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_19_question",
      "label": "Nineteenth Form Question"
    },
    {
      "type": "text",
      "id": "form_19_year_adoption_unique_id",
      "label": "Nineteenth Form Year Adoption Unique ID"
    },
    {
      "type": "header",
      "content": "Twentieth Form Content"
    },
    {
      "type": "text",
      "id": "form_20_unique_id",
      "label": "Twentieth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_20_question",
      "label": "Twentieth Form Question"
    },
    {
      "type": "image_picker",
      "id": "form20_image",
      "label": "Twentieth Form Image"
    },
    {
      "type": "text",
      "id": "form_20_option_1",
      "label": "Twentieth Form Option 1"
    },
    {
      "type": "text",
      "id": "form_20_option_2",
      "label": "Twentieth Form Option 2"
    },
    {
      "type": "header",
      "content": "Twentieth First Form Content"
    },
    {
      "type": "text",
      "id": "form_21_unique_id",
      "label": "Twentieth First Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_21_question",
      "label": "Twentieth First Form Question"
    },
    {
      "type": "text",
      "id": "form_21_question_description",
      "label": "Twentieth First Form Question Description"
    },
    {
      "type": "image_picker",
      "id": "form_21_image",
      "label": "Twentieth First Form Image"
    },
    {
      "type": "text",
      "id": "form_21_option_1",
      "label": "Twentieth First Form Option 1"
    },
    {
      "type": "text",
      "id": "form_21_option_2",
      "label": "Twentieth First Form Option 2"
    },
    {
      "type": "text",
      "id": "form_21_option_3",
      "label": "Twentieth First Form Option 3"
    },
    {
      "type": "text",
      "id": "form_21_option_4",
      "label": "Twentieth First Form Option 4"
    },
    {
      "type": "header",
      "content": "Twentieth Second Form Content"
    },
    {
      "type": "text",
      "id": "form_22_unique_id",
      "label": "Twenthieth Second Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_22_question",
      "label": "Twentieth Second Form Question"
    },
    {
      "type": "text",
      "id": "form_22_known_allergies_unique_id",
      "label": "Twenthieth Second Known Allergies Form Unique ID"
    },
    {
      "type": "header",
      "content": "Twentieth Third Form Content"
    },{
      "type":"header",
      "content":"Form 23 Options"
    },{
      "type":"text",
      "id":"form_23_option_1",
      "label":"Form 23 Option 1",
      "default":"Adresse"
    },{
      "type":"text",
      "id":"form_23_option_2",
      "label":"Form 23 Option 2",
      "default":"Adresse ligne 2"
    },{
      "type":"text",
      "id":"form_23_option_3",
      "label":"Form 23 Option 3",
      "default":"Ville"
    },{
      "type":"text",
      "id":"form_23_option_4",
      "label":"Form 23 Option 4",
      "default":"État/Région/Province"
    },{
      "type":"text",
      "id":"form_23_option_5",
      "label":"Form 23 Option 5",
      "default":"Code postal"
    },{
      "type":"text",
      "id":"form_23_option_6",
      "label":"Form 23 Option 6",
      "default":"Pays"
    },{
      "type":"header",
      "content":"Form Eleven Id's"
    },
    {
      "type": "text",
      "id": "form_23_unique_id",
      "label": "Twentieth Third Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_23_address_line_1_unique_id",
      "label": "Twentieth Third Form Address Line 1 Unique ID"
    },
    {
      "type": "text",
      "id": "form_23_address_line_2_unique_id",
      "label": "Twentieth Third Form Address Line 2 Unique ID"
    },
    {
      "type": "text",
      "id": "form_23_city_unique_id",
      "label": "Twentieth Third Form City Unique ID"
    },
    {
      "type": "text",
      "id": "form_23_state_unique_id",
      "label": "Twentieth Third Form State Unique ID"
    },
    {
      "type": "text",
      "id": "form_23_postal_code_unique_id",
      "label": "Twentieth Third Form Postal Code Unique ID"
    },
    {
      "type": "text",
      "id": "form_23_country_unique_id",
      "label": "Twentieth Third Form Country Unique ID"
    },
    {
      "type": "text",
      "id": "form_23_question",
      "label": "Twentieth Third Form Question"
    },
    {
      "type": "header",
      "content": "Twentieth Forth Form Content"
    },
    {
      "type": "text",
      "id": "form_24_unique_id",
      "label": "Thwentieth Forth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_24_question",
      "label": "Twentieth Forth Form Question"
    },
    {
      "type": "text",
      "id": "form_24_question_description",
      "label": "Twentieth Forth Form Question Description"
    },
    {
      "type": "text",
      "id": "form_24_do_not_repair_unique_id",
      "label": "Thwentieth Forth Form Do Not Repair Unique ID"
    },
    {
      "type": "header",
      "content": "Twentieth Fifth Form Content"
    },
    {
      "type": "text",
      "id": "form_25_unique_id",
      "label": "Twentieth Fifth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_25_question",
      "label": "Twentieth Fifth Form Question"
    },
    {
      "type": "text",
      "id": "form_25_question_description",
      "label": "Twentieth Fifth Form Question Description"
    },
    {
      "type": "image_picker",
      "id": "form_25_image",
      "label": "Twentieth Fifth Form Image"
    },
    {
      "type": "text",
      "id": "form_25_option_1",
      "label": "Twentieth Fifth Form Option 1"
    },
    {
      "type": "text",
      "id": "form_25_option_2",
      "label": "Twentieth Fifth Form Option 2"
    },
    {
      "type": "text",
      "id": "form_25_option_3",
      "label": "Twentieth Fifth Form Option 3"
    },
    {
      "type": "text",
      "id": "form_25_option_4",
      "label": "Twentieth Fifth Form Option 4"
    },
    {
      "type": "header",
      "content": "Twentieth Sixth Form Content"
    },
    {
      "type": "text",
      "id": "form_26_unique_id",
      "label": "Twentieth Sixth Form Unique ID"
    },
    {
      "type": "text",
      "id": "form_26_question",
      "label": "Twentieth Sixth Form Question"
    },
    {
      "type": "text",
      "id": "form_26_question_description",
      "label": "Twentieth Sixth Form Question Description"
    },
    {
      "type": "text",
      "id": "form_26_story_unique_id",
      "label": "Twentieth Sixth Form Story Unique ID"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.header.content"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "t:sections.all.padding.padding_top.unit",
      "label": "t:sections.all.padding.padding_top.label",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "t:sections.all.padding.padding_bottom.unit",
      "label": "t:sections.all.padding.padding_bottom.label",
      "default": 36
    },
    {
      "type": "header",
      "content": "Mechanism End"
    },
    {
      "type": "text",
      "id": "mechanism_end_unique_id",
      "label": "Mechanism End Unique ID"
    },
    {
      "type": "richtext",
      "id": "mechanism_end_text",
      "label": "Mechanism End Text"
    },
    {
      "type": "header",
      "content": "Replica End"
    },
    {
      "type": "text",
      "id": "replica_end_unique_id",
      "label": "Replica End Unique ID"
    },
    {
      "type": "richtext",
      "id": "replica_end_text",
      "label": "Replica End Text"
    },
    {
      "type": "header",
      "content": "Real Fur End"
    },
    {
      "type": "text",
      "id": "real_fur_end_unique_id",
      "label": "Real Fur End Unique ID"
    },
    {
      "type": "richtext",
      "id": "real_fur_end_text",
      "label": "Real Fur End Text"
    },
    {
      "type": "header",
      "content": "Procelain End"
    },
    {
      "type": "text",
      "id": "procelain_end_unique_id",
      "label": "Procelain End Unique ID"
    },
    {
      "type": "richtext",
      "id": "procelain_end_text",
      "label": "Procelain End Text"
    },
    {
      "type": "header",
      "content": "Plastic End"
    },
    {
      "type": "text",
      "id": "plastic_end_unique_id",
      "label": "Plastic End Unique ID"
    },
    {
      "type": "richtext",
      "id": "plastic_end_text",
      "label": "Plastic End Text"
    },
    {
      "type": "header",
      "content": "Success Message"
    },
    {
      "type": "text",
      "id": "success_message_unique_id",
      "label": "Success Message Unique ID"
    },
    {
      "type": "text",
      "id": "success_message_text",
      "label": "Success Message Text"
    },
    {
      "type": "image_picker",
      "id": "success_message_icon",
      "label": "Sucess Message Icon"
    },{
      "type": "text",
      "id":"shipping_details_title",
      "label":"Shipping Details Title",
      "default":"les détails d'expédition"
    },{
      "type": "text",
      "id":"estimated_price_text",
      "label":"Estimated Price Text",
      "default":"Prix estimé"
    },{
      "type": "text",
      "id":"estimated_total_price_text",
      "label":"Estimated Total Price Text",
      "default":"Prix total estimé"
    }
  ],
  "blocks": [
    {
      "type": "line_item_property",
      "name": "Line Item",
      "settings": [
        {
          "type": "text",
          "id": "line_item_property_unique_id",
          "label": "Line Item Property Unique ID"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.line_item_property.settings.paragraph.content"
        },
        {
          "type": "select",
          "id": "type",
          "options": [
            {
              "value": "text",
              "label": "t:sections.main-product.blocks.line_item_property.settings.type.options__1.label"
            },
            {
              "value": "textarea",
              "label": "t:sections.main-product.blocks.line_item_property.settings.type.options__2.label"
            },
            {
              "value": "checkbox",
              "label": "t:sections.main-product.blocks.line_item_property.settings.type.options__3.label"
            },
            {
              "value": "radio",
              "label": "t:sections.main-product.blocks.line_item_property.settings.type.options__4.label"
            },
            {
              "value": "select",
              "label": "t:sections.main-product.blocks.line_item_property.settings.type.options__5.label"
            },{
              "value":"file",
              "label":"File"
            }
          ],
          "default": "text",
          "label": "t:sections.main-product.blocks.line_item_property.settings.type.label"
        },
        {
          "type": "text",
          "id": "title",
          "label": "t:sections.main-product.blocks.line_item_property.settings.label.label",
          "default": "Your label"
        },
        {
          "type": "checkbox",
          "id": "required",
          "label": "t:sections.main-product.blocks.line_item_property.settings.required.label",
          "info": "t:sections.main-product.blocks.line_item_property.settings.required.info",
          "default": false
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.line_item_property.settings.header__1.content",
          "info": "t:sections.main-product.blocks.line_item_property.settings.header__1.info"
        },
        {
          "type": "text",
          "id": "checked_value",
          "label": "t:sections.main-product.blocks.line_item_property.settings.checked_value.label",
          "default": "Yes"
        },
        {
          "type": "text",
          "id": "unchecked_value",
          "label": "t:sections.main-product.blocks.line_item_property.settings.unchecked_value.label",
          "default": "No"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.line_item_property.settings.header__2.content",
          "info": "t:sections.main-product.blocks.line_item_property.settings.header__2.info"
        },
        {
          "type": "text",
          "id": "radio_options",
          "label": "t:sections.main-product.blocks.line_item_property.settings.options.label",
          "info": "t:sections.main-product.blocks.line_item_property.settings.options.info"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.line_item_property.settings.header__3.content",
          "info": "t:sections.main-product.blocks.line_item_property.settings.header__3.info"
        },
        {
          "type": "text",
          "id": "select_options",
          "label": "t:sections.main-product.blocks.line_item_property.settings.options.label",
          "info": "t:sections.main-product.blocks.line_item_property.settings.options.info"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Type Form Section"
    }
  ]
}
{% endschema %}
{% comment %}
  {
    "type": "product",
    "id": "form_9_option_16_product",
    "label": "Ninth Form Option 16 Product"
  },
  {
    "type": "text",
    "id": "form_9_option_16",
    "label": "Ninth Form Option 16"
  },
{% endcomment %}
